{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,OAAEA,EAAQb,MAAAc,EAAKC,KAAEA,GAASJ,EAAMK,cAAcC,SAEpD,IAAIC,EAAgBC,OAAON,EAAOO,OAC9BC,EAAeF,OAAOL,EAAMM,OAC5BE,EAAcH,OAAOJ,EAAKK,OAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAeK,GAAK,EACvCzB,EAAcyB,EAAGF,GACdG,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,OAAW,IAGpDqB,GAAgBC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\n//form submit\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { amount, delay, step } = event.currentTarget.elements;\n\n  let promiseAmount = Number(amount.value);\n  let promiseDelay = Number(delay.value);\n  let promiseStep = Number(step.value);\n\n  for (let i = 1; i <= promiseAmount; i += 1) {\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n    promiseDelay += promiseStep;\n  }\n}\n\n//create Promise\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","amount","delay1","step","currentTarget","elements","promiseAmount","Number","value","promiseDelay","promiseStep","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.91bbb6af.js.map"}